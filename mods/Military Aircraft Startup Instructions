// ==UserScript==
// @name         GeoFS Military Aircraft Startup with Instructions
// @namespace    http://tampermonkey.net/
// @version      1.2
// @description  Adds a tab with startup procedures and instructions for military aircraft in GeoFS
// @author       Your Name
// @match        *://www.geo-fs.com/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // Wait for the GeoFS environment to load
    function waitForGeoFS() {
        if (typeof geofs !== 'undefined' && geofs.api && geofs.aircraft) {
            initializeStartupTab();
        } else {
            setTimeout(waitForGeoFS, 1000);
        }
    }

    // Initialize the startup tab
    function initializeStartupTab() {
        console.log("Military Aircraft Startup Script Loaded");

        // Create the modal container
        const modal = document.createElement('div');
        modal.id = 'startupModal';
        modal.style.position = 'fixed';
        modal.style.top = '50%';
        modal.style.left = '50%';
        modal.style.transform = 'translate(-50%, -50%)';
        modal.style.width = '400px';
        modal.style.padding = '20px';
        modal.style.backgroundColor = '#333';
        modal.style.color = '#fff';
        modal.style.border = '2px solid #fff';
        modal.style.borderRadius = '10px';
        modal.style.display = 'none';
        modal.style.zIndex = 1001;

        // Add a close button to the modal
        const closeButton = document.createElement('button');
        closeButton.innerText = 'Close';
        closeButton.style.marginBottom = '10px';
        closeButton.style.padding = '5px 10px';
        closeButton.style.backgroundColor = '#555';
        closeButton.style.color = '#fff';
        closeButton.style.border = 'none';
        closeButton.style.cursor = 'pointer';
        closeButton.addEventListener('click', () => {
            modal.style.display = 'none';
        });
        modal.appendChild(closeButton);

        // Add buttons for each military aircraft
       const aircrafts = [
    { 
        name: 'F-16 Fighting Falcon', 
        procedure: () => performStartupProcedure('F-16 Fighting Falcon'),
        instructions: [
            "Step 1: Power On the aircraft.",
            "Step 2: Turn on avionics systems.",
            "Step 3: Set navigation systems to operational mode.",
            "Step 4: Arm weapons systems (if applicable).",
            "Step 5: Perform pre-flight checks.",
            "Step 6: Confirm all systems are operational and ready for takeoff."
        ]
    },
    { 
        name: 'F-22 Raptor', 
        procedure: () => performStartupProcedure('F-22 Raptor'),
        instructions: [
            "Step 1: Power On the aircraft.",
            "Step 2: Activate avionics and stealth systems.",
            "Step 3: Initialize navigation systems.",
            "Step 4: Arm weapons systems (if applicable).",
            "Step 5: Perform pre-flight diagnostics.",
            "Step 6: Confirm readiness for takeoff."
        ]
    },
    { 
        name: 'F-35 Lightning II', 
        procedure: () => performStartupProcedure('F-35 Lightning II'),
        instructions: [
            "Step 1: Power On the aircraft.",
            "Step 2: Initialize avionics and stealth systems.",
            "Step 3: Activate navigation and targeting systems.",
            "Step 4: Arm weapons systems (if applicable).",
            "Step 5: Perform pre-flight checks.",
            "Step 6: Confirm all systems are operational and ready for takeoff."
        ]
    },
    { 
        name: 'B-2 Spirit', 
        procedure: () => performStartupProcedure('B-2 Spirit'),
        instructions: [
            "Step 1: Power On the aircraft.",
            "Step 2: Activate avionics and stealth systems.",
            "Step 3: Initialize navigation and communication systems.",
            "Step 4: Arm defensive systems (if applicable).",
            "Step 5: Perform pre-flight diagnostics.",
            "Step 6: Confirm readiness for takeoff."
        ]
    },
    { 
        name: 'A-10 Thunderbolt II', 
        procedure: () => performStartupProcedure('A-10 Thunderbolt II'),
        instructions: [
            "Step 1: Power On the aircraft.",
            "Step 2: Turn on avionics and targeting systems.",
            "Step 3: Arm the GAU-8 Avenger cannon and other weapons systems.",
            "Step 4: Perform pre-flight checks.",
            "Step 5: Confirm all systems are operational and ready for takeoff."
        ]
    },
    {
        name: 'Boeing F/A-18F Super Hornet',
        procedure: () => performStartupProcedure('Boeing F/A-18F Super Hornet'),
        instructions: [
            "Step 1: Power On the aircraft.",
            "Step 2: Turn on avionics systems.",
            "Step 3: Set navigation systems to operational mode.",
            "Step 4: Arm weapons systems (if applicable).",
            "Step 5: Perform pre-flight checks.",
            "Step 6: Confirm readiness for takeoff."
        ]
    }
    // Add more aircraft here following the same structure
];

        aircrafts.forEach(aircraft => {
            const button = document.createElement('button');
            button.innerText = `Start ${aircraft.name}`;
            button.style.display = 'block';
            button.style.margin = '10px 0';
            button.style.padding = '10px';
            button.style.backgroundColor = '#444';
            button.style.color = '#fff';
            button.style.border = 'none';
            button.style.cursor = 'pointer';
            button.addEventListener('click', () => {
                displayInstructions(aircraft.name, aircraft.instructions);
                aircraft.procedure();
            });
            modal.appendChild(button);
        });

        document.body.appendChild(modal);

        // Add a key listener to open the modal
        document.addEventListener('keydown', (event) => {
            if (event.key === 'k') {
                modal.style.display = 'block';
            }
        });
    }

    // Display instructions for the selected aircraft
    function displayInstructions(aircraftName, instructions) {
        console.log(`Instructions for ${aircraftName}:`);
        instructions.forEach((instruction, index) => {
            console.log(`${index + 1}. ${instruction}`);
        });
        alert(`Startup Instructions for ${aircraftName}:\n\n${instructions.join('\n')}`);
    }

    // Perform the startup procedure for a specific aircraft
    function performStartupProcedure(aircraftName) {
        console.log(`Starting ${aircraftName}...`);

        // Example steps for startup
        setTimeout(() => {
            console.log(`${aircraftName} Step 1: Power On`);
            geofs.aircraft.instance.engines.forEach(engine => engine.running = true);
        }, 1000);

        setTimeout(() => {
            console.log(`${aircraftName} Step 2: Avionics On`);
            geofs.api.setVariable('avionics', true);
        }, 2000);

        setTimeout(() => {
            console.log(`${aircraftName} Step 3: Weapons Systems Online`);
            // Simulate enabling weapons systems (if applicable)
        }, 3000);

        setTimeout(() => {
            console.log(`${aircraftName} Step 4: Ready for Takeoff`);
            alert(`${aircraftName} Startup Complete. Ready for Takeoff!`);
        }, 4000);
    }

    // Start waiting for GeoFS to load
    waitForGeoFS();
})();
